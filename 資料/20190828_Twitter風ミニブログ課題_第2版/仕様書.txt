
課題：Twitter風ミニブログの作成

###
techacademyなぞればできるかも
https://laravel-microposts.herokuapp.com/


###
・laravel復習
・DB定義書書く + DBテーブル作成
・テスト環境構築(laravel) + テストデータ作成
・view URL作成,route設定
・DB更新エラー画面
・全体validate

view
header
	タイムライン
		全体のtweet表示
		ログイン後なら
			 ログイン者 + ログイン者がfollowしているユーザーの発言一覧画面
		tweet20件表示
		pager作成
	tweetする
		tweet機能作成(pop up,tweetがメインのappなので)
		リプライ機能設置
		tweet内で@入れると対象者profileへのリンク作成
		tweet内で@で送信すると対象者へ通知
	通知
		通知一覧画面
	profile
		編集画面で編集クリック後,pop upはしない
		(1人1人のprofile + ログイン者の発言一覧)画面
			tweet10件表示(profile画面)
			pager作成
			ログイン後なら
				follow,unfollow機能設置
					follow時,相手に通知する機能
				ログイン者のprofile編集画面へのリンク表示
					profile編集画面作成
						フォーム系の入力確認画面
				ログイン者のアカウント情報編集画面へのリンク
					account情報編集画面作成
						フォーム系の入力確認画面
						icon編集機能
							icon up機能
							awsアカウント作成
							aws設定
							aws画像up機能設定
				ログイン者がfollowしているユーザー一覧画面へのリンク
	login,logout
		ログイン画面
		ログイン機能設置
footer
	programasters tweet






###

2019-08-28 第2版
作成：めちゃコマ本田

【完成形】
最終的にユーザアカウントを5つ（それぞれユーザ名「user01」〜「user05」）作成し、それぞれ
	user01 : 次のアカウントをフォロー 02, 03, 04, 05
	user02 : 次のアカウントをフォロー 01, 03
	user03 : 次のアカウントをフォロー 04, 05
	user04 : 次のアカウントをフォロー 03
	user05 : 次のアカウントをフォロー 02, 04
	（user01とuser02、user03とuser04は相互フォロー、他は片思いフォロー）
	というフォロー関係とする。

各アカウントのパスワードはそれぞれ「1111」〜「5555」（ユーザ名の番号を4桁）とする。
	各ユーザのタイムラインには、「自分の発言」＋「フォローしているユーザの発言」が新しいものから時系列順で表示される。
	「フォローされているユーザの発言」は含めない点に注意すること。

【前提条件】
・ユーザ名は半角英数字のみで、重複してはならない。16文字以下とする。
・各ユーザは日本語で表示名を設定できる。重複しても構わない。全角半角問わず20文字以下とする。
・各ユーザはプロフィール文を設定できる。文字数制限はない。
・各ユーザは任意のタイミングで発言ができる。発言の文字数制限はない。
・各ユーザは他のユーザをフォローすることができる。自分自身をフォローすることはできない。

【注意事項】
・デザインスキルは要求しないため、プログラムが動作すればデザインは問わない。自由に作成してよい。
・デザイン作成が苦手な場合は、同梱の画面イメージ例を参考にしてよい。（ただし大問2小問12まで完成した状態の表示例のため注意すること）
・ただしユーザインタフェースの利便性などには気を配ること。

・また実際の Twitter のような大規模な運用に耐えうるよう、セキュリティやパフォーマンスに配慮すること。
・パフォーマンステストのために、上記の完成形に示した以外のアカウントを作成してもよい。

【課題の提出について】
・ソースコードのほか、データベースのテーブル構造とデータのダンプファイル、大問2小問9以降はアイコンデータも含めること。

【大問1】：設計

	■小問1：データベース設計
		・「ユーザテーブル」「フォロー関係テーブル」「発言テーブル」の3つを作成しなさい。
		・各テーブルにどんな項目が必要か考え、適切なテーブル構造にすること。
		・また必要に応じてインデックスを作成すること。

	■小問2：プロフィール・フォロー関係の設定
		・小問1で設計したテーブルをデータベース上で作成する。
		・各ユーザごとに、「ユーザテーブル」にユーザ名・パスワード・表示名・プロフィール文を登録しなさい。
		・また「フォロー関係テーブル」にデータを登録し、完成形に示すフォロー関係を実現しなさい。

【大問2】：機能の作成

	◎共通事項
		・各機能は適切なファイル名を各自考えること。
		・各機能間で共通する部分はリファクタリングを心がけること。
		・データベースの更新を伴う機能では、内部エラーが発生したときにエラー画面を表示させること。
		・入力フォーム系は登録前に確認画面を表示させること。
		・必要に応じて独自関数を作成してよい。

	■小問1：ログイン・ログアウト機能の作成
		・大問1小問2で登録したユーザ名・パスワードでログインできるようログインフォームを作成しなさい。
		・また、ログインした状態からログアウトできる機能を作成しなさい。
		・ログインに成功した場合、ログインしているユーザの表示名を出力すること。

	■小問2：発言機能の作成
		・発言を送信すると「発言テーブル」にデータが登録されるよう入力フォームを作成しなさい。

	■小問3：プロフィールと自分の発言一覧（タイムライン）(1ページで)
		・ログインしているユーザ（以下「自分」と表記）のプロフィール（自己紹介など）と、
		自分が発言した内容の最新10件を日時の降順（新しい発言が上に表示される）で表示するタイムライン機能を作成しなさい。

	■小問4：フォローしているユーザ一覧の作成
		・「自分がフォローしているユーザ」一覧の機能を作成しなさい。
		・各ユーザごとに、表示名やプロフィール文などを表示すること。
		memo: textが多すぎれば「...」にする

	■小問5：他のユーザのプロフィール（小問3の応用）
		小問3で作成したプロフィール画面を修正し、他のユーザのプロフィールも表示できるよう改良しなさい。
		・また小問4で作成したユーザ一覧を改良し、各ユーザのプロフィールへリンクを貼ること。
		・ログインしていない状態でも指定したユーザのプロフィールを見ることができるようにすること。

	■小問6：自分自身とフォローしているユーザの発言一覧（タイムライン）（小問3〜5の応用）
		・完成形に示した「自分の発言」＋「フォローしているユーザの発言」の最新20件を、
		・日時の降順で表示するタイムライン機能を作成しなさい。
		・それぞれに発言者、発言内容、発言日時を表示すること。
		・ログインしていない状態でアクセスした場合は、全ユーザの発言を一覧表示すること。

	■小問7：ページネーション
		・小問3と小問6で作成したタイムライン機能にページネーションを追加し、古い発言を表示できるようにしなさい。

以下、余裕があったらチャレンジしてよい。（必須ではない）
また、必要に応じてデータベースのテーブルやカラムを増やしてよい。

	■小問8：アカウント情報の編集機能
		・ログインに使用するユーザ名とパスワードを変更できる機能を作成しなさい。
		・前提条件にあるように、使われているユーザ名を登録しようとしたときはエラーメッセージを表示すること。

	■小問9：プロフィール編集機能とアイコン画像の設定
		・プロフィール編集機能を作成し、自己紹介とアイコンを登録できるようにしなさい。
		・また、小問4のフォロー一覧、小問6のタイムラインの各発言にアイコンが表示されるようにすること。

	■小問10：リプライ機能の実装
		・小問2で作成した発言機能を修正し、特定のユーザに宛てたリプライを実装しなさい。
		・発言本文の中で「@user01」と書くと user01 宛てにリプライが送信されるようにすること。
		・また、リプライを受け取ったユーザにはログイン時に通知が表示されるようにしなさい。
		・なお、実際の Twitter とは違い、「フォローしていないユーザへのリプライ」が表示されても問題ない。
		（user02でログインした状態で、user03（フォローしている）から user04（フォローしていない）に宛てたリプライがタイムラインに表示されても構わない）

	■小問11：タイムラインでのユーザ情報へのリンク
		・小問10で実装したリプライ発言で、「@user01」などの文字列に、該当するユーザ情報へのリンクを張りなさい。
		・存在しないユーザの場合はリンクにしないこと。

	■小問12：フォロー機能
		・小問5で作成したプロフィールページに「フォローする」ボタンを設置し、ボタンを押すとフォローする機能を実装しなさい。
		・フォローボタンを押すと画面遷移せずにフォローが完了するよう実装すること。
		・既にフォロー済みのユーザの場合は「フォロー解除」ボタンとし、同様に画面遷移なしでフォローが解除されるようにしなさい。
		・また小問10のリプライ通知と同様、フォローされたユーザ宛に通知が表示されるようにすること。





質問:

phpなら laravel
rubyなら rails
を使ってもOKですか？


画面は
・ログイン画面
・DB更新エラー画面
・(自分 + 自分がfollowしているユーザー)の発言一覧画面
・フォーム系の入力確認画面
・(自分のprofile + 自分の発言一覧)画面
・自分がfollowしているユーザー一覧画面
・各ユーザーのprofile詳細画面
・自分のprofile編集画面

の8枚で合っていますか？


また
・発言自体はどの画面で行うのでしょうか？
・発言にも入力確認画面が必要ですか？
・「各ユーザーのprofile詳細画面」で,そのユーザーの発言一覧は表示しますか？
	その場合,pagerは必要ですか？
・画像のアップ先は自由ですか？
・全体的に,分からない時は相談OKですか？


あと工数ですが,やってみないと分からないというのが所感です。
絶対何かにはまると思うので,ざっくり1ヶ月ぐらい,とイメージしました。







ログイン前、全てのユーザーを含めた発言一覧画面,
ログイン後　・(自分 + 自分がfollowしているユーザー)の発言一覧画面
=> ログイン前ログイン後で,PG側で表示を切り替えるので,画面としては1枚になりませんか？

アカウント編集画面
プロフィール編集画面
=> 1枚ではなく,それぞれ別で作成ですか？

発言入力画面
=> タイムラインの上部とか,pop upだと思ったんですがどうでしょう？ 仕様書に明記がないんです。

発言入力確認画面
=> つぶやきに確認画面いる感じですか？

通知画面
=> pop upではなく別ページで1枚ですよね？


[引用 aid=4056877 time=1567156363]DB更新エラー画面とは例えばどんな状況のときに表示する予定ですか？[/引用]
仕様書に、
・データベースの更新を伴う機能では、内部エラーが発生したときにエラー画面を表示させること。

と書いているので、、
























